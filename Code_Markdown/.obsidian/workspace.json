{
  "main": {
    "id": "05b4d8345086d852",
    "type": "split",
    "children": [
      {
        "id": "8b621f3adfd88cf4",
        "type": "tabs",
        "children": [
          {
            "id": "3b5b6afc4580159c",
            "type": "leaf",
            "pinned": true,
            "state": {
              "type": "markdown",
              "state": {
                "file": "CSDN/数据结构和算法学习/【比赛相关】学习资源.md",
                "mode": "preview",
                "source": false
              },
              "pinned": true
            }
          },
          {
            "id": "2e6aee3aa0660980",
            "type": "leaf",
            "pinned": true,
            "state": {
              "type": "markdown",
              "state": {
                "file": "【数据结构和算法学习】块状数据结构：分块思想、块状数组、莫队、块状链表、树分块(树上莫队)、SqrtTree和分段打表.md",
                "mode": "source",
                "source": false
              },
              "pinned": true
            }
          },
          {
            "id": "4148aed929c836a1",
            "type": "leaf",
            "pinned": true,
            "state": {
              "type": "markdown",
              "state": {
                "file": "CSDN/数据结构和算法学习/【数据结构和算法学习】动态规划：背包DP.md",
                "mode": "source",
                "source": false
              },
              "pinned": true
            }
          },
          {
            "id": "d9cab01b9d635fbf",
            "type": "leaf",
            "pinned": true,
            "state": {
              "type": "markdown",
              "state": {
                "file": "CSDN/数据结构和算法学习/【数据结构和算法学习】动态规划：树形DP.md",
                "mode": "source",
                "source": false
              },
              "pinned": true
            }
          },
          {
            "id": "17e72a83f5d361a4",
            "type": "leaf",
            "pinned": true,
            "state": {
              "type": "markdown",
              "state": {
                "file": "CSDN/数据结构和算法学习/【数据结构和算法学习】离线算法：莫队算法（对询问分块）.md",
                "mode": "source",
                "source": false
              },
              "pinned": true
            }
          },
          {
            "id": "18b8cef26383b919",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "CSDN/数据结构和算法学习/【数据结构和算法学习】离线算法：整体二分.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "70ffadd74ecb967e",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "CSDN/数据结构和算法学习/【数据结构和算法学习】二分算法：分数规划.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "38b3bc73f63d67f7",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "CSDN/数据结构和算法学习/【数据结构和算法学习】离散算法：CDQ分治.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "68171cc397f769b3",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "【数据结构和算法学习】线段树基础,合并,分裂,优化建图,猫树.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "160dc6e5e8fb409f",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "CSDN/数据结构和算法学习/算法学习笔记() 可持久化数据结构——可持久化数组_并查集_Trie_线段树.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "f6e18c59d8ae27d0",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "CSDN/刷题日志与精进之路/LeetCode 2369. Check if There is a Valid Partition For The Array【记忆化搜索,动态规划】1779.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "de20de0218b95ea6",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "LeetCode 741. 摘樱桃【动态规划】困难.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "631e6acc844b37d6",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "LeetCode 857. 雇佣 K 名工人的最低成本【】2259.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "965b55a5cae0ba0a",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "LeetCode 1553. 吃掉 N 个橘子的最少天数【动态规划,记忆化搜索】2048.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "d2c267e537cc74a9",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "技术积累1：Java容错机制.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ],
        "currentTab": 14
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "332763153e4d9405",
    "type": "split",
    "children": [
      {
        "id": "d43ff578e0616642",
        "type": "tabs",
        "children": [
          {
            "id": "5e26ff52038df001",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "9b91cc27f07e0e58",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "背包",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": true,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "fcdca7f2c9e98094",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 341.5
  },
  "right": {
    "id": "fbf490589399261b",
    "type": "split",
    "children": [
      {
        "id": "059cd07af6fe8347",
        "type": "tabs",
        "children": [
          {
            "id": "b84387611051c35e",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "技术积累1：Java容错机制.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "3c0b601097f357dc",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "cb36a3a3c07e38d7",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "技术积累1：Java容错机制.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "4e43c3089b640938",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "技术积累1：Java容错机制.md"
              }
            }
          },
          {
            "id": "36a7de9dbefc5d90",
            "type": "leaf",
            "state": {
              "type": "all-properties",
              "state": {
                "sortOrder": "frequency",
                "showSearch": false,
                "searchQuery": ""
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 200,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "canvas:新建白板": false,
      "switcher:打开快速切换": false,
      "command-palette:打开命令面板": false,
      "markdown-importer:打开 Markdown 格式转换器": false,
      "workspaces:管理工作区布局": false,
      "random-note:开始漫游笔记": false
    }
  },
  "floating": {
    "id": "b059aee28e5e8b3e",
    "type": "floating",
    "children": [
      {
        "id": "ad20c98eab35ab59",
        "type": "window",
        "children": [
          {
            "id": "140e5f88e691b877",
            "type": "tabs",
            "children": [
              {
                "id": "845d252a5a497922",
                "type": "leaf",
                "state": {
                  "type": "markdown",
                  "state": {
                    "file": "CSDN/基础课程和实践项目/设计模式/【设计模式】C++_C#_Java实现State模式.md",
                    "mode": "source",
                    "source": false
                  }
                }
              },
              {
                "id": "10700b96960df352",
                "type": "leaf",
                "state": {
                  "type": "markdown",
                  "state": {
                    "file": "LeetCode 216. 组合总和 III【DFS+回溯,子集枚举】中等.md",
                    "mode": "source",
                    "source": false
                  }
                }
              },
              {
                "id": "faea32683e7b4802",
                "type": "leaf",
                "state": {
                  "type": "markdown",
                  "state": {
                    "file": "未命名 9.md",
                    "mode": "source",
                    "source": false
                  }
                }
              }
            ],
            "currentTab": 2
          }
        ],
        "direction": "vertical",
        "x": 502,
        "y": 184,
        "width": 1035,
        "height": 665,
        "maximize": false,
        "zoom": 0
      }
    ]
  },
  "active": "d2c267e537cc74a9",
  "lastOpenFiles": [
    "未命名 9.md",
    "技术积累1：Java容错机制.md",
    "LeetCode 216. 组合总和 III【DFS+回溯,子集枚举】中等.md",
    "LeetCode 1553. 吃掉 N 个橘子的最少天数【动态规划,记忆化搜索】2048.md",
    "LeetCode 857. 雇佣 K 名工人的最低成本【】2259.md",
    "CSDN/刷题日志与精进之路/LeetCode 2391. 收集垃圾的最少总时间【倒序遍历+贡献法】1455.md",
    "LeetCode 741. 摘樱桃【动态规划】困难.md",
    "CSDN/刷题日志与精进之路/LeetCode 2105. 给植物浇水 II【相向双指针模拟】1507.md",
    "CSDN/刷题日志与精进之路/LeetCode 2960. 统计已测试设备【差分思想】简单.md",
    "CSDN/刷题日志与精进之路/LeetCode 2079. 给植物浇水【数组】1320.md",
    "CSDN/刷题日志与精进之路/LeetCode 2369. Check if There is a Valid Partition For The Array【记忆化搜索,动态规划】1779.md",
    "CSDN/刷题日志与精进之路/LeetCode 1235. 规划兼职工作【排序+动规+二分】2022.md",
    "CSDN/刷题日志与精进之路/LeetCode 2462. 雇佣 K 位工人的总代价【最小堆,模拟】.md",
    "CSDN/刷题日志与精进之路/LeetCode 1491. 去掉最低工资和最高工资后的工资平均值【编程基础】简单.md",
    "CSDN/刷题日志与精进之路/LeetCode 1652. 拆炸弹【定长滑窗】简单.md",
    "CSDN/刷题日志与精进之路/LeetCode 2739. 总行驶距离【模拟,数学】简单.md",
    "CSDN/刷题日志与精进之路/LeetCode 1518. Water Bottles【模拟;数学】简单.md",
    "【数据结构和算法学习】线段树基础,合并,分裂,优化建图,猫树.md",
    "CSDN/刷题日志与精进之路/LeetCode 2639. 查询网格图中每一列的宽度【数组】简单.md",
    "CSDN/刷题日志与精进之路/LeetCode 1146. 快照数组【哈希表+二分查找】中等.md",
    "未命名 10.md",
    "CSDN/基础课程和实践项目/设计模式/【设计模式】C++_C#_Java实现State模式.md",
    "CSDN/刷题日志与精进之路/LeetCode 2864. 最大二进制奇数【字符串,贪心】简单.md",
    "未命名 8.md",
    "CSDN/刷题日志与精进之路/LeetCode 54. 螺旋矩阵【数组】中等.md",
    "CSDN/刷题日志与精进之路/LeetCode 2673. 使二叉树所有路径值相等的最小代价【贪心】1917.md",
    "未命名 1.canvas",
    "未命名 2.canvas",
    "刷漆",
    "Java/项目/外卖/产品原型/瑞吉外卖后台（管理端）/images/分类管理/u198.png",
    "Java/项目/谷粒商城/开发阶段文档md/images/image-20200428195507730.png",
    "计算机",
    "j计算机网络",
    "leftJSON/tutorial07/images/parse_stringify.png",
    "leftJSON/tutorial07/images/parse_stringify.dot",
    "leftJSON/tutorial07/images/makefile",
    "leftJSON/tutorial05/images/parse_array10.png",
    "leftJSON/tutorial05/images/parse_array10.dot",
    "leftJSON/tutorial05/images/parse_array09.png",
    "leftJSON/tutorial05/images/parse_array09.dot",
    "leftJSON/tutorial05/images/parse_array08.png",
    "leftJSON/tutorial05/images/parse_array08.dot",
    "leftJSON/tutorial05/images/parse_array07.png",
    "leftJSON/tutorial05/images/parse_array07.dot",
    "leftJSON/tutorial05/images/parse_array06.png",
    "leftJSON/tutorial05/images/parse_array06.dot",
    "leftJSON/tutorial05/images/parse_array05.png",
    "leftJSON/tutorial05/images/parse_array04.png",
    "未命名.canvas"
  ]
}