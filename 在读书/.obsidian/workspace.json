{
  "main": {
    "id": "52470852dbc92742",
    "type": "split",
    "children": [
      {
        "id": "ef4c8269dd811fb9",
        "type": "tabs",
        "children": [
          {
            "id": "88a442b47d703f1c",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NETTY/10. Netty 的数据处理：引入 ChannelPipeline，完善 ChannelPipeline 体系(一).md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "10. Netty 的数据处理：引入 ChannelPipeline，完善 ChannelPipeline 体系(一)"
            }
          },
          {
            "id": "650eb0dc3a914573",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NETTY/11. Netty 的数据处理：引入 ChannelPipeline，完善 ChannelPipeline 体系(二).md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "11. Netty 的数据处理：引入 ChannelPipeline，完善 ChannelPipeline 体系(二)"
            }
          },
          {
            "id": "6465a9d6db803623",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NETTY/12. Netty 的数据处理：引入 ChannelPipeline，完善 ChannelPipeline 体系(三).md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "12. Netty 的数据处理：引入 ChannelPipeline，完善 ChannelPipeline 体系(三)"
            }
          },
          {
            "id": "99868c716d82b24d",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NETTY/13. Netty 的数据处理：引入 ChannelPipeline，完善 ChannelPipeline 体系(四).md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "13. Netty 的数据处理：引入 ChannelPipeline，完善 ChannelPipeline 体系(四)"
            }
          },
          {
            "id": "cee1fe4c86b7971e",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NETTY/14. Netty 的定时任务：完善定时任务体系，重构 connect 方法.md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "14. Netty 的定时任务：完善定时任务体系，重构 connect 方法"
            }
          },
          {
            "id": "fb546ca5c405c7ea",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NETTY/15. Netty 连接的检测：引入 IdleStateHandler，实现心跳检测.md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "15. Netty 连接的检测：引入 IdleStateHandler，实现心跳检测"
            }
          },
          {
            "id": "db950642ca29c2b9",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NETTY/16. Netty 的时间轮：引入 HashedWheelTimer，学习时间轮中的数据结构.md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "16. Netty 的时间轮：引入 HashedWheelTimer，学习时间轮中的数据结构"
            }
          },
          {
            "id": "3c3eadafcec6668e",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NETTY/17. Netty 线程的私有容器：引入 FastThreadLocal 体系，掌握其设计原理.md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "17. Netty 线程的私有容器：引入 FastThreadLocal 体系，掌握其设计原理"
            }
          },
          {
            "id": "f97eb75723dbddb8",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NETTY/18. Netty 中对象的复用：引入对象池，掌握对象池的设计理念(一).md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "18. Netty 中对象的复用：引入对象池，掌握对象池的设计理念(一)"
            }
          },
          {
            "id": "f035aef45a6d84fb",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NETTY/19. Netty 中对象的复用：引入对象池，掌握对象池的执行流程(二).md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "19. Netty 中对象的复用：引入对象池，掌握对象池的执行流程(二)"
            }
          },
          {
            "id": "2e7bace012feb804",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NETTY/20. Netty 的数据容器：引入 ByteBuf，学习 ByteBuf 的设计原理.md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "20. Netty 的数据容器：引入 ByteBuf，学习 ByteBuf 的设计原理"
            }
          },
          {
            "id": "7e1bb3e86be275ab",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NETTY/21. Netty 的内存优化：详解 Netty 的内存分配(一).md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "21. Netty 的内存优化：详解 Netty 的内存分配(一)"
            }
          },
          {
            "id": "507b2b8269591832",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NETTY/22. Netty 的内存优化：详解 Netty 的内存分配(二).md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "22. Netty 的内存优化：详解 Netty 的内存分配(二)"
            }
          },
          {
            "id": "b0de6ae52a65fde6",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NETTY/23. Netty 的内存优化：详解 Netty 的内存分配(三).md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "23. Netty 的内存优化：详解 Netty 的内存分配(三)"
            }
          },
          {
            "id": "4d0393eadf90f34b",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NETTY/24. Netty 的内存优化：写完内存池，完全掌握 Netty 中的池化技术.md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "24. Netty 的内存优化：写完内存池，完全掌握 Netty 中的池化技术"
            }
          },
          {
            "id": "19d7f6bf9cec2859",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NETTY/25.  Netty 内存的检测：运用弱引用，实现 Netty 的内存泄漏检测(一).md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "25.  Netty 内存的检测：运用弱引用，实现 Netty 的内存泄漏检测(一)"
            }
          },
          {
            "id": "f586ed272722fbaa",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NETTY/26. Netty 内存的检测：运用弱引用，实现 Netty 的内存泄漏检测(二).md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "26. Netty 内存的检测：运用弱引用，实现 Netty 的内存泄漏检测(二)"
            }
          },
          {
            "id": "f4990333332d73c2",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NETTY/27. Netty 的 IO 处理：重写 NioEventLoop，学习 Netty 处理 IO 事件全流程.md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "27. Netty 的 IO 处理：重写 NioEventLoop，学习 Netty 处理 IO 事件全流程"
            }
          },
          {
            "id": "e833021fda980d0c",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NETTY/28. Netty 内存的动态分配：重构 read 方法，池化技术的运用和实践.md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "28. Netty 内存的动态分配：重构 read 方法，池化技术的运用和实践"
            }
          },
          {
            "id": "24389a2e21c5dcf2",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NETTY/29. Netty 的 write 事件：重构 writeAndFlush 方法，完善细节，详解 Netty 发送数据流程(一).md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "29. Netty 的 write 事件：重构 writeAndFlush 方法，完善细节，详解 Netty 发送数据流程(一)"
            }
          },
          {
            "id": "2fc9f46712ad0489",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NETTY/30. Netty 的 flush 事件：重构 writeAndFlush 方法，完善细节，详解 Netty 发送数据流程(二).md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "30. Netty 的 flush 事件：重构 writeAndFlush 方法，完善细节，详解 Netty 发送数据流程(二)"
            }
          },
          {
            "id": "db45e2ad7c5a08a4",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NETTY/31. Netty 的消息解析：引入编解码器，解决粘包半包，正确解析消息.md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "31. Netty 的消息解析：引入编解码器，解决粘包半包，正确解析消息"
            }
          },
          {
            "id": "39d116be6710b527",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NETTY/32. Netty 连接的关闭：优雅停机和释放资源(一).md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "32. Netty 连接的关闭：优雅停机和释放资源(一)"
            }
          },
          {
            "id": "d8f184fcc27662fa",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "NACOS/从零带你写 Nacos.md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "从零带你写 Nacos"
            }
          },
          {
            "id": "1a9de48d4581318d",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Rust学习/3. 认识Cargo、多国语言HelloWorld.md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "3. 认识Cargo、多国语言HelloWorld"
            }
          }
        ],
        "currentTab": 23
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "75b79490384ebf5f",
    "type": "split",
    "children": [
      {
        "id": "8aaf3b72ffb5bd85",
        "type": "tabs",
        "children": [
          {
            "id": "c55c3ca31d98ecc1",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              },
              "icon": "lucide-folder-closed",
              "title": "文件列表"
            }
          },
          {
            "id": "2906369bb51d5ee7",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              },
              "icon": "lucide-search",
              "title": "搜索"
            }
          },
          {
            "id": "e8fd72eebf3df81a",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {},
              "icon": "lucide-bookmark",
              "title": "书签"
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 297.5
  },
  "right": {
    "id": "b92df6124a88456f",
    "type": "split",
    "children": [
      {
        "id": "ea17479d35d39be3",
        "type": "tabs",
        "children": [
          {
            "id": "92f8ac1c8f18a712",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "NACOS/从零带你写 Nacos.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              },
              "icon": "links-coming-in",
              "title": "从零带你写 Nacos 的反向链接列表"
            }
          },
          {
            "id": "a42af8a3e6b7a83f",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "NACOS/从零带你写 Nacos.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              },
              "icon": "links-going-out",
              "title": "从零带你写 Nacos 的出链列表"
            }
          },
          {
            "id": "370d6d1c9802a971",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              },
              "icon": "lucide-tags",
              "title": "标签"
            }
          },
          {
            "id": "b5f1c4a69b0f2ef9",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "NACOS/从零带你写 Nacos.md"
              },
              "icon": "lucide-list",
              "title": "从零带你写 Nacos 的大纲"
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:打开快速切换": false,
      "graph:查看关系图谱": false,
      "canvas:新建白板": false,
      "daily-notes:打开/创建今天的日记": false,
      "templates:插入模板": false,
      "command-palette:打开命令面板": false
    }
  },
  "active": "c55c3ca31d98ecc1",
  "lastOpenFiles": [
    "HIPPO4j/10. 实现 Tomcat、Dubbo 线程池配置的动态变更与信息上报.md",
    "HIPPO4j/12. 实现通知报警功能.md",
    "HIPPO4j/9. 实现线程池运行时信息的收集与上报(二).md",
    "HIPPO4j/8. 实现线程池运行时信息的收集与上报(一).md",
    "HIPPO4j/7. 运用长轮询，实现线程池配置信息的动态变更(二).md",
    "HIPPO4j/6. 运用长轮询，实现线程池配置信息的动态变更(一).md",
    "HIPPO4j/5. 完善框架，实现客户端与服务端的心跳检测以及过期服务移除功能.md",
    "HIPPO4j/4. 构建简单客户端，实现项目线程池信息向服务端的注册功能(三).md",
    "HIPPO4j/3. 完善 DynamicThreadPoolExecutor 体系，构建简单客户端(二).md",
    "HIPPO4j/2. 引入 DynamicThreadPoolExecutor 体系，完善线程池扩展功能(一).md",
    "HIPPO4j/0. 从零带你写 hippo4j  目录.md",
    "HIPPO4j/1. 从 java 线程池探讨动态线程池框架的可行性以及扩展性.md",
    "Disruptor/从零带你写disruptor：单生产者单消费者模式队列的搭建(七).md",
    "Disruptor/从零带你写disruptor：单生产者单消费者模式队列的搭建(三).md",
    "Disruptor/从零带你写disruptor：单生产者单消费者模式队列的搭建(四).md",
    "Disruptor/从零带你写disruptor：单生产者单消费者模式队列的搭建(五).md",
    "Disruptor/从零带你写disruptor：单生产者单消费者模式队列的搭建(一).md",
    "Disruptor/从零带你写disruptor：单生产者多消费者模式队列的搭建(保证并发消费的安全).md",
    "XXLJOB/12. 完善调度中心的分片广播、在线编码调度定时任务功能.md",
    "XXLJOB/11. 完善不依赖Springboot的执行器、超时时间，子任务执行功能.md",
    "XXLJOB/10. 完善执行器端的过期日志清除和任务阻塞策略功能，终止任务线程功能.md",
    "XXLJOB/9. 完善xxl-job调度中心的日志收集和清除过期日志工功能.md",
    "XXLJOB/8. 完善调度中心的监控和告警，以及失败重试功能.md",
    "XXLJOB/7. 完善xxl-job执行器端的结果回调和日志收集功能.md",
    "XXLJOB/6. 细说xxl-job的心跳检测和路由策略.md",
    "XXLJOB/5. xxl-job执行器服务端的简单搭建(二).md",
    "未命名",
    "NACOS",
    "HIPPO4j",
    "SOFTJRAFT",
    "Disruptor",
    "XXLJOB",
    "NETTY",
    "Rust学习",
    "Pasted image 20240630183859.png",
    "Pasted image 20240630160015.png"
  ]
}